### YamlMime:ManagedReference
items:
- uid: JotunnLib.ConsoleCommand
  commentId: T:JotunnLib.ConsoleCommand
  id: ConsoleCommand
  parent: JotunnLib
  children:
  - JotunnLib.ConsoleCommand.Help
  - JotunnLib.ConsoleCommand.Name
  - JotunnLib.ConsoleCommand.Run(System.String[])
  langs:
  - csharp
  - vb
  name: ConsoleCommand
  nameWithType: ConsoleCommand
  fullName: JotunnLib.ConsoleCommand
  type: Class
  source:
    remote:
      path: JotunnLib/ConsoleCommand.cs
      branch: main
      repo: git@github.com:raduschirliu/valheim-loki-loader
    id: ConsoleCommand
    path: ConsoleCommand.cs
    startLine: 5
  assemblies:
  - JotunnLib
  namespace: JotunnLib
  syntax:
    content: public abstract class ConsoleCommand
    content.vb: Public MustInherit Class ConsoleCommand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: JotunnLib.ConsoleCommand.Name
  commentId: P:JotunnLib.ConsoleCommand.Name
  id: Name
  parent: JotunnLib.ConsoleCommand
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConsoleCommand.Name
  fullName: JotunnLib.ConsoleCommand.Name
  type: Property
  source:
    remote:
      path: JotunnLib/ConsoleCommand.cs
      branch: main
      repo: git@github.com:raduschirliu/valheim-loki-loader
    id: Name
    path: ConsoleCommand.cs
    startLine: 7
  assemblies:
  - JotunnLib
  namespace: JotunnLib
  syntax:
    content: public abstract string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Name As String
  overload: JotunnLib.ConsoleCommand.Name*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: JotunnLib.ConsoleCommand.Help
  commentId: P:JotunnLib.ConsoleCommand.Help
  id: Help
  parent: JotunnLib.ConsoleCommand
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: ConsoleCommand.Help
  fullName: JotunnLib.ConsoleCommand.Help
  type: Property
  source:
    remote:
      path: JotunnLib/ConsoleCommand.cs
      branch: main
      repo: git@github.com:raduschirliu/valheim-loki-loader
    id: Help
    path: ConsoleCommand.cs
    startLine: 8
  assemblies:
  - JotunnLib
  namespace: JotunnLib
  syntax:
    content: public abstract string Help { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Help As String
  overload: JotunnLib.ConsoleCommand.Help*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: JotunnLib.ConsoleCommand.Run(System.String[])
  commentId: M:JotunnLib.ConsoleCommand.Run(System.String[])
  id: Run(System.String[])
  parent: JotunnLib.ConsoleCommand
  langs:
  - csharp
  - vb
  name: Run(String[])
  nameWithType: ConsoleCommand.Run(String[])
  fullName: JotunnLib.ConsoleCommand.Run(System.String[])
  type: Method
  source:
    remote:
      path: JotunnLib/ConsoleCommand.cs
      branch: main
      repo: git@github.com:raduschirliu/valheim-loki-loader
    id: Run
    path: ConsoleCommand.cs
    startLine: 9
  assemblies:
  - JotunnLib
  namespace: JotunnLib
  syntax:
    content: public abstract void Run(string[] args)
    parameters:
    - id: args
      type: System.String[]
    content.vb: Public MustOverride Sub Run(args As String())
  overload: JotunnLib.ConsoleCommand.Run*
  nameWithType.vb: ConsoleCommand.Run(String())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: JotunnLib.ConsoleCommand.Run(System.String())
  name.vb: Run(String())
references:
- uid: JotunnLib
  commentId: N:JotunnLib
  name: JotunnLib
  nameWithType: JotunnLib
  fullName: JotunnLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: JotunnLib.ConsoleCommand.Name*
  commentId: Overload:JotunnLib.ConsoleCommand.Name
  name: Name
  nameWithType: ConsoleCommand.Name
  fullName: JotunnLib.ConsoleCommand.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: JotunnLib.ConsoleCommand.Help*
  commentId: Overload:JotunnLib.ConsoleCommand.Help
  name: Help
  nameWithType: ConsoleCommand.Help
  fullName: JotunnLib.ConsoleCommand.Help
- uid: JotunnLib.ConsoleCommand.Run*
  commentId: Overload:JotunnLib.ConsoleCommand.Run
  name: Run
  nameWithType: ConsoleCommand.Run
  fullName: JotunnLib.ConsoleCommand.Run
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
